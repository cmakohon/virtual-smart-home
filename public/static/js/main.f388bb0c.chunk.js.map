{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useForm","register","handleSubmit","useState","id","setId","loading","setLoading","className","style","marginRight","fontSize","marginBottom","onSubmit","data","fetch","encodeURIComponent","homeName","then","response","json","result","catch","err","type","name","ref","placeholder","required","size","color","onClick","navigator","clipboard","writeText","console","error","marginLeft","cursor","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQA0FeA,MApFf,WACE,IADa,EAGsBC,cAA3BC,EAHK,EAGLA,SAAUC,EAHL,EAGKA,aAHL,EAIOC,mBAAS,MAJhB,mBAINC,EAJM,KAIFC,EAJE,OAKiBF,oBAAS,GAL1B,mBAKNG,EALM,KAKGC,EALH,KA0Bb,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,+BACE,cAAC,IAAD,CACEC,MAAO,CACLC,YAAa,SACbC,SAAU,OACVC,aAAc,UALpB,uBAUEN,IAAYF,GACZ,uBAAMS,SAAUX,GAjCP,SAACY,GAChBP,GAAW,GACXQ,MAPA,mFAOYC,mBAAmBF,EAAKG,WACjCC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLd,EAAMc,EAASE,QACfd,GAAW,MAEZe,OAAM,SAACC,GAAD,OAAShB,GAAW,SAyBvB,UACE,uBACEiB,KAAK,OACLC,KAAK,WACLC,IAAKzB,EACL0B,YAAY,YACZC,UAAQ,IAEV,uBAAOJ,KAAK,cAGflB,GACC,cAAC,IAAD,CAAYuB,KAAM,GAAIC,MAAO,UAAWxB,QAASA,KAEjDA,GAAWF,GACX,sBAAKI,UAAU,SAAf,UACE,sBAAMA,UAAU,YAAhB,SAA6BJ,IAC7B,cAAC,IAAD,CACE2B,QAxCG,WACbC,UAAUC,UAAUC,UAAU9B,GAAIc,MAAK,eAEpC,SAASK,GACVY,QAAQC,MAAM,+BAAgCb,OAqCtCO,MAAO,UACPrB,MAAO,CACL4B,WAAY,OACZ1B,SAAU,OACVC,aAAc,OACd0B,OAAQ,mBAMlB,oBAAGC,KAAK,8BAA8B/B,UAAU,SAAhD,UACE,cAAC,IAAD,CACEC,MAAO,CACLC,YAAa,QACbC,SAAU,OACVC,aAAc,UALpB,6BChES4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f388bb0c.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { AiOutlineHome, AiFillGithub, AiOutlineCopy } from \"react-icons/ai\";\nimport RingLoader from \"react-spinners/RingLoader\";\nimport \"./App.css\";\n\nfunction App() {\n  const url =\n    \"https://us-central1-virtual-smart-home-8c6b8.cloudfunctions.net/createHome?name=\";\n  const { register, handleSubmit } = useForm();\n  const [id, setId] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (data) => {\n    setLoading(true);\n    fetch(url + encodeURIComponent(data.homeName))\n      .then((response) => response.json())\n      .then((response) => {\n        setId(response.result);\n        setLoading(false);\n      })\n      .catch((err) => setLoading(false));\n  };\n\n  const onCopy = () => {\n    navigator.clipboard.writeText(id).then(function() {\n      //copy success\n    }, function(err) {\n      console.error('Async: Could not copy text: ', err);\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>\n          <AiOutlineHome\n            style={{\n              marginRight: \"1.5rem\",\n              fontSize: \"36pt\",\n              marginBottom: \"-8px\",\n            }}\n          />\n          Create your home\n        </h1>\n        {!loading && !id && (\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <input\n              type=\"text\"\n              name=\"homeName\"\n              ref={register}\n              placeholder=\"Home name\"\n              required\n            />\n            <input type=\"submit\" />\n          </form>\n        )}\n        {loading && (\n          <RingLoader size={42} color={\"#92DCE5\"} loading={loading} />\n        )}\n        {!loading && id && (\n          <div className=\"result\">\n            <span className=\"result-id\">{id}</span>\n            <AiOutlineCopy\n              onClick={onCopy}\n              color={'#92DCE5'}\n              style={{\n                marginLeft: \"1rem\",\n                fontSize: \"16pt\",\n                marginBottom: \"-4px\",\n                cursor: 'pointer'\n              }}\n          />\n          </div>\n        )}\n      </div>\n      <a href=\"https://github.com/cmakohon\" className=\"footer\">\n        <AiFillGithub\n          style={{\n            marginRight: \".5rem\",\n            fontSize: \"16pt\",\n            marginBottom: \"-4px\",\n          }}\n        />\n        github.com/cmakohon\n      </a>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}